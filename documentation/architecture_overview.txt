@startuml
allowmixing

title Architecture Overview of Robot_HideAndSeek

package Detector {
    interface InterfaceDetector {
        + getDetectedObjects() : std::tuple<pair<int, int>, pair<int, int>, int>
    }

    class ImageTreatment {

    }

    collections Detector

    Detector -right-|> InterfaceDetector
    ImageTreatment -up-> Detector
}

package Actuator {
	note "Pilotage du support" as NoteActuator1
	class Actuator << (S,#FF7700) Singleton >> {
		- int _angleServo1
		- int _angleServo2
		- int _cameraWidth
		- int _cameraHeight
		- int _positionX
		- int _positionY
		- ServoDriver _driver

		+ Actuator(int cameraWidth, int cameraHeight)
		+ Actuator()
		+ ~Actuator()
		+ void setCameraParameters(int cameraWidth, int cameraHeight)
		+ void goTo(int x, int y)
		+ void reset()
		+ std::pair<int, int> getCurrentPosition()
		+ std::pair<int, int> getCurrentAngle()
		- int _convertToAngle(int position)
		- int _convertToPosition(int angle)
	}
	Actuator .. NoteActuator1
	
	component LibPCA9685
	Actuator --> LibPCA9685
	node I2C
	node Servo1
	node Servo2
	LibPCA9685 -- I2C
	I2C -- Servo1
	I2C -- Servo2
}

note "Responsable du menu" as NoteMaster1
class Master << (S,#FF7700) Singleton >> {
    + showMenu()
}
Master .. NoteMaster1

Master -left-* Actuator
Master -right-* InterfaceDetector


center footer La Légion Automatisée
skinparam legendFontSize 5
legend bottom left 
This work is licensed under the Creative Commons
Attribution-NonCommercial-ShareAlike 4.0 International License.
To view a copy of this license, visit
http://creativecommons.org/licenses/by-nc-sa/4.0/
or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.
end legend  

@enduml
